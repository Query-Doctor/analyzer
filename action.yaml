# code=yaml
# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/refs/heads/master/src/schemas/json/github-action.json

name: "Query Doctor"
description: "Query Doctor"

branding:
  icon: "database"
  color: "blue"

runs:
  using: "composite"
  steps:
    # Setup Deno environment
    - name: Install Deno
      uses: denoland/setup-deno@v2
      with:
        cache: true
        deno-version: v2.x

    # Cache pgBadger build
    - name: Cache pgBadger
      uses: actions/cache@v4
      id: pgbadger-cache
      with:
        path: /usr/local/bin/pgbadger
        key: pgbadger-${{ runner.os }}-v13.1

    # Install pgbadger dependencies (using apt for Ubuntu runners)
    - name: Install pgBadger Dependencies
      shell: bash
      if: steps.pgbadger-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y perl make wget postgresql-client

    # Download, build, and install pgBadger
    - name: Download and Install pgBadger
      shell: bash
      if: steps.pgbadger-cache.outputs.cache-hit != 'true'
      run: |
        PGBADGER_VERSION=13.1
        cd /tmp
        wget https://github.com/darold/pgbadger/archive/v${PGBADGER_VERSION}.tar.gz -O pgbadger.tar.gz
        tar -xzf pgbadger.tar.gz
        cd pgbadger-${PGBADGER_VERSION}
        perl Makefile.PL
        sudo make install # Use sudo to install globally
        cd ${{ github.action_path }} # Return to action directory

    # Run the compiled application
    - name: Run Analyzer
      shell: bash
      working-directory: ${{ github.action_path }}
      run: deno run start
      env:
        PG_DUMP_BINARY: /usr/bin/pg_dump
        CI: "true"
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
